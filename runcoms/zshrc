if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="usr/local/bin:$PATH"
export PATH="Applications/Postgres.app/Contents/Versions/9.3/bin:$PATH"
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
fpath=("/usr/local/bin/" $fpath)
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

alias berap='bundle exec rake assets:precompile'
alias rm='rm -i'
alias tma='tmux attach -d -t'
alias tmn='tmux new -s $(basename $(pwd))'
alias tml='tmux list-sessions'
alias ll='ls -lh'
alias la='ls -A'
alias gl='git pull --rebase'
alias be='bundle exec'
alias pd='cd ~/projects/' #private working directory
alias subl='subl'
alias co="git checkout"
alias gb="git branch"
alias cb="git checkout -b"

# why would you type 'cd dir' if you could just type 'dir'?
setopt AUTO_CD
 
# Now we can pipe to multiple outputs!
setopt MULTIOS
 
# This makes cd=pushd
setopt AUTO_PUSHD
 
# This will use named dirs when possible
setopt AUTO_NAME_DIRS
 
# If we have a glob this will expand it
setopt GLOB_COMPLETE
setopt PUSHD_MINUS
 
# No more annoying pushd messages...
# setopt PUSHD_SILENT
 
# blank pushd goes to home
setopt PUSHD_TO_HOME
 
# this will ignore multiple directories for the stack.  Useful?  I dunno.
setopt PUSHD_IGNORE_DUPS
 
# 10 second wait if you do something that will delete everything.  I wish I'd had this before...
setopt RM_STAR_WAIT
 
# use magic (this is default, but it can't hurt!)
setopt ZLE
 
setopt NO_HUP
 
setopt IGNORE_EOF
 
# If I could disable Ctrl-s completely I would!
setopt NO_FLOW_CONTROL
 
# Keep echo "station" > station from clobbering station
setopt NO_CLOBBER
 
# Case insensitive globbing
setopt NO_CASE_GLOB
 
# Be Reasonable!
setopt NUMERIC_GLOB_SORT
 
# I don't know why I never set this before.
setopt EXTENDED_GLOB
 
# hows about arrays be awesome?  (that is, frew${cool}frew has frew surrounding all the variables, not just first and last
setopt RC_EXPAND_PARAM
 
# Who doesn't want home and end to work?
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line
 
# Incremental search is elite!
bindkey -M vicmd "/" history-incremental-search-backward
bindkey -M vicmd "?" history-incremental-search-forward
 
# Search based on what you typed in already
bindkey -M vicmd "//" history-beginning-search-backward
bindkey -M vicmd "??" history-beginning-search-forward
 
bindkey "\eOP" run-help
 
# oh wow!  This is killer...  try it!
bindkey -M vicmd "q" push-line
 
# it's like, space AND completion.  Gnarlbot.
bindkey -M viins ' ' magic-spaceeval 
